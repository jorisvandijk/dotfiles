#!/usr/bin/env bash
#	Info 2.6
#	Shows time, date and system information in a notification for Hyprland
#	Dependencies: acpi, libnotify, jq, hyprctl, otf-font-awesome, pamixer, 
#		brightnessctl, bluez, bluez-utils
#   Usage: Just run the script.
#
#	Adapted from original script by Joris van Dijk | Joris.codes 
#	Licensed under the MIT license

battery() {
    # Get the status and capacity of both batteries
    batstat0="$(cat /sys/class/power_supply/BAT0/status)"
    batstat1="$(cat /sys/class/power_supply/BAT1/status)"
    
    battery0="$(cat /sys/class/power_supply/BAT0/capacity)"
    battery1="$(cat /sys/class/power_supply/BAT1/capacity)"
    
    capacity0=1644  # Last full capacity of BAT0 (mAh)
    capacity1=1623  # Last full capacity of BAT1 (mAh)

    # Calculate remaining mAh for each battery
    remaining0=$(( (battery0 * capacity0) / 100 ))
    remaining1=$(( (battery1 * capacity1) / 100 ))

    # Calculate total remaining energy and total capacity
    total_remaining=$((remaining0 + remaining1))
    total_capacity=$((capacity0 + capacity1))

    # Calculate combined battery percentage
    combined_percentage=$(( 100 * total_remaining / total_capacity ))

    # Determine the charging status
    if [[ $batstat0 == 'Unknown' ]] || [[ $batstat0 == 'Charging' ]] || \
       [[ $batstat1 == 'Unknown' ]] || [[ $batstat1 == 'Charging' ]]; then
        icon=""
    elif [[ $combined_percentage -ge 5 ]] && [[ $combined_percentage -le 19 ]]; then
        icon=""
    elif [[ $combined_percentage -ge 20 ]] && [[ $combined_percentage -le 39 ]]; then
        icon=""
    elif [[ $combined_percentage -ge 40 ]] && [[ $combined_percentage -le 59 ]]; then
        icon=""
    elif [[ $combined_percentage -ge 60 ]] && [[ $combined_percentage -le 79 ]]; then
        icon=""
    elif [[ $combined_percentage -ge 80 ]] && [[ $combined_percentage -le 95 ]]; then
        icon=""
    elif [[ $combined_percentage -ge 96 ]] && [[ $combined_percentage -le 100 ]]; then
        icon=""
    fi

    echo $icon $combined_percentage"%"
}


datetime() {
	if [[ $1 = 'd' ]]; then
		icon=""
		info="$(date "+%A %-d/%-m/%Y")"
	elif [[ $1 = 't' ]]; then
		icon=""
		info="$(date "+%H:%M")"
	else
		icon=""
		info="Incorrect or missing flag"
	fi

	echo $icon $info	
}

volume () {
	vol="$(pamixer --get-volume)"
	
	if [[ $(pamixer --get-mute) == "true" ]]; then
		icon="   "
	# elif [[ $vol -ge 0 ]] && [[ $vol -le 33 ]]; then
	    # icon=""
	# elif [[ $vol -ge 34 ]] && [[ $vol -le 66 ]]; then
	    # icon=""
	else
		icon="  "
	fi

	echo $icon $vol
}

bluetooth_battery() {
	mac="1C:52:16:3C:35:AC"
	
	icon=''
	
	name=$(bluetoothctl info $mac| grep 'Name:' | cut -d\   -f2)
	bat=$(bluetoothctl info $mac| grep Battery | grep -oP '\(\K[^\)]+')
	if [[ $bat == '' ]]; then
		echo ""
	else	
		echo $icon $name $bat%
	fi
}

brightness() {
    current_brightness=$(brightnessctl g)
    max_brightness=$(brightnessctl m)
    brightness_percentage=$((current_brightness * 100 / max_brightness))

    if [[ $brightness_percentage -le 20 ]]; then
        icon="" # Low brightness icon
    elif [[ $brightness_percentage -le 60 ]]; then
        icon="" # Medium brightness icon
    else
        icon="" # High brightness icon
    fi

    echo "$icon $brightness_percentage%"
}

options=( "datetime t" "datetime d" "battery" "volume" "brightness" )
output=""

for i in "${options[@]}"; do
    output+="$($i)\n"
done

notify-send -u normal -t 6000 "System Info" "$output"





